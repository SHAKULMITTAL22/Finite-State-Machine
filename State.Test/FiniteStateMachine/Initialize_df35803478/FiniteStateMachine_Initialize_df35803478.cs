// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using System;
using NUnit.Framework;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class FiniteStateMachine_Initialize_df35803478
    {
        private FiniteStateMachine _finiteStateMachine;

        [SetUp]
        public void Setup()
        {
            _finiteStateMachine = new FiniteStateMachine();
        }

        [Test]
        public void Initialize_WhenCalled_ShouldCallBaseInitialize()
        {
            var baseInitializeCalled = false;

            // TODO: Use your own mocking framework to setup the base class Initialize method to set the baseInitializeCalled variable to true when called.

            _finiteStateMachine.Initialize();

            Assert.IsTrue(baseInitializeCalled, "Expected base.Initialize to have been called, but it was not.");
        }

        [Test]
        public void Initialize_WhenCalled_MultipleTimes_ShouldAlwaysCallBaseInitialize()
        {
            var baseInitializeCallCount = 0;

            // TODO: Use your own mocking framework to setup the base class Initialize method to increment the baseInitializeCallCount variable each time it is called.

            _finiteStateMachine.Initialize();
            _finiteStateMachine.Initialize();
            _finiteStateMachine.Initialize();

            Assert.AreEqual(3, baseInitializeCallCount, "Expected base.Initialize to have been called 3 times, but it was called {0} times.", baseInitializeCallCount);
        }

        [TearDown]
        public void Teardown()
        {
            // TODO: Add any resource cleanup logic if necessary.
        }
    }
}
