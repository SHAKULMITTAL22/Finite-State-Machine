// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using FiniteStateMachine;
using System;

namespace FiniteStateMachine.Test
{
    public class FiniteStateMachine_MoveTo_e3f88cdb76
    {
        private StateMachine<TestEnumStates> _stateMachine;
        private bool eventFired = false;

        // Initializing state machine and event
        [SetUp]
        public void SetUp()
        {
            _stateMachine = new StateMachine<TestEnumStates>();
            _stateMachine.OnStateChange += StateChangeEventHandler;
        }

        // Event Handler
        private void StateChangeEventHandler(FiniteStateChangeEventArgs eventArgs)
        {
            eventFired = true;
        }

        // Test case 1: Tests if the event gets triggered when moving to another state
        [Test]
        public void MoveTo_ShouldTriggerOnStateChange_WhenStateChanges()
        {
            TestEnumStates targetStateKey = TestEnumStates.EnumState2;

            _stateMachine.MoveTo(targetStateKey);

            Assert.IsTrue(eventFired);
        }

        // Test case 2: Tests if the event does not get triggered when moving to the same state
        [Test]
        public void MoveTo_ShouldNotTriggerOnStateChange_WhenStateDoesNotChange()
        {
            TestEnumStates targetStateKey = TestEnumStates.EnumState1;

            _stateMachine.MoveTo(targetStateKey);

            Assert.IsFalse(eventFired);
        }

        // TODO: Substitute TestEnumStates with actual Enum states
        public enum TestEnumStates
        {
            EnumState1, 
            EnumState2  
        }
    }
}
