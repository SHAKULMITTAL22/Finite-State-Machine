// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using FiniteStateMachine; // suppose this is your namespace

// define your test class
[TestFixture]
public class FiniteStateMachine_MoveTo_e3f88cdb76
{
    //mock OnStateChange event
    private EventMock mockEvent;

    [SetUp]
    public void Setup()
    {
        mockEvent = new EventMock();
    }

    [Test]
    public void MoveTo_TargetStateKey_Success()
    {
        var stateMachine = new FiniteStateMachine(); // suppose this is your StateMachine
        stateMachine.OnStateChange += mockEvent.OnStateChange; 

        var expectedState = StateType.Running; 
        var actualState = stateMachine.MoveTo(expectedState);

        Assert.AreEqual(expectedState, actualState);
        Assert.IsTrue(mockEvent.IsInvoked);
    }

    [Test]
    public void MoveTo_TargetStateKey_Fail()
    {
        var stateMachine = new FiniteStateMachine(); 
        stateMachine.OnStateChange += mockEvent.OnStateChange; 

        var expectedState = StateType.Running; 
        var invalidState = StateType.Stopped;
        var actualState = stateMachine.MoveTo(invalidState);

        Assert.AreNotEqual(expectedState, actualState);
        Assert.IsTrue(mockEvent.IsInvoked);
    }

    private class EventMock
    {
        public bool IsInvoked {get; private set; }

        public void OnStateChange(object sender, FiniteStateChangeEventArgs args)
        {
            IsInvoked = true;
        }
    }
}
