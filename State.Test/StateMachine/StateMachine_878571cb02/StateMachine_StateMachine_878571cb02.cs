// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using System.Collections.Generic;

namespace FiniteStateMachine.Tests
{
    public class StateMachineTests
    {
        private StateMachine<int> _stateMachine;

        [SetUp]
        public void SetUp()
        {
            _stateMachine = new StateMachine<int>();
        }

        [Test]
        public void StateMachine_WhenInstantiated_ShouldHaveNoStates()
        {
            // Act
            var numberOfStates = _stateMachine.StatesCount;

            // Assert
            Assert.AreEqual(0, numberOfStates);
        }

        [Test]
        public void StateMachine_WhenStateAdded_ShouldIncreaseStatesCount()
        {
            // Act
            _stateMachine.AddState(1, new State<int>());

            // Assert
            Assert.AreEqual(1, _stateMachine.StatesCount);
        }

        [TearDown]
        public void TearDown()
        {
            _stateMachine = null;
        }
    }
}

public class StateMachine<T>
{
    private readonly IDictionary<T, State<T>> _states;

    public StateMachine()
    {
        _states = new Dictionary<T, State<T>>();
    }

    public int StatesCount => _states.Count;

    public void AddState(T stateId, State<T> state)
    {
        _states.Add(stateId, state);
    }
}

public class State<T>
{
}
