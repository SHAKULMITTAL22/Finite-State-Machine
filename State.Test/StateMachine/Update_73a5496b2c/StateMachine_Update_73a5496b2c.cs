// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using NSubstitute;
using YourNamespace; // TODO: Replace this with your actual namespace

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class StateMachine_Update_73a5496b2c
    {
        private StateMachine _stateMachine;
        private IState _mockState;

        [SetUp]
        public void SetUp() {
            _mockState = Substitute.For<IState>();
            _stateMachine = new StateMachine(); // TODO: Adjust this line as per your actual StateMachine class's instantiation
            
            // Simulating that there's a state
            _stateMachine.m_currentState = _mockState;
        }

        // Test Case 1: Checks if the Update function of the current state is called when Update is executed.
        [Test]
        public void Update_CallsUpdateOfCurrentState_WhenExecuted()
        {
            var deltaTime = 1f;

            _stateMachine.Update(deltaTime);

            _mockState.Received(1)._Update(deltaTime);
        }
        
        // Test Case 2: Checks if the m_currentState is null, it does not throw an exception
        [Test]
        public void Update_DoesNotThrowException_IfCurrentStateIsNull()
        {
            _stateMachine.m_currentState = null;
            
            // Assert that an exception is not thrown
            Assert.DoesNotThrow(() => _stateMachine.Update(1f));
        }
    }
}
