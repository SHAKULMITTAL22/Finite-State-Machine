// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using System;
using System.Collections.Generic;
using FiniteStateMachine;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class StateMachine_AddState_95a50d88c6
    {
        private StateMachine<string> _stateMachine;
        private State<string> _state;

        [SetUp]
        public void SetUp()
        {
            _stateMachine = new StateMachine<string>();
            _state = new State<string>(_stateMachine, "TestState");
        }

        [Test]
        public void AddState_StateBelongsToStateMachine_StateAdded()
        {
            // Act
            _stateMachine.AddState(_state);

            // Assert
            Assert.That(_stateMachine.Contains(_state.StateKey), Is.EqualTo(true));
        }

        [Test]
        public void AddState_StateDoesNotBelongToStateMachine_ThrowsException()
        {
            // Arrange
            var otherStateMachine = new StateMachine<string>();
            var otherState = new State<string>(otherStateMachine, "OtherState");

            // Act & Assert
            var ex = Assert.Throws<Exception>(() => _stateMachine.AddState(otherState));
            Assert.That(ex.Message, Is.EqualTo("[FiniteStateMachine::AddState()] -> The State can only be added to the State Machine that was used to create it."));
        }
    }
}
