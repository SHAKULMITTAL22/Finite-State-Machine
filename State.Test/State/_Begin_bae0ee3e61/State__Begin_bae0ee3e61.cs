// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using FiniteStateMachine;
using System;

namespace FiniteStateMachine.Test
{
    public class State__Begin_bae0ee3e61_Test
    {
        private State__Begin_bae0ee3e61 stateObj;

        [SetUp]
        public void SetUp()
        {
            stateObj = new State__Begin_bae0ee3e61();
        }

        [Test]
        public void _Begin_WithValidArgs_ShouldCallBeginMethod()
        {
            // Arrange
            var eventArgs = new FiniteStateChangeEventArgs();
            var previousStateKey = "previousState";

            // Act
            stateObj._Begin(eventArgs, previousStateKey);

            // Assert
            // TODO: Add assertion statement here to validate that Begin() method is called. The assertion will depend on how the behavior of Begin() method can be observed or its effects felt on an object or output.
        }

        [Test]
        public void _Begin_WithNullEventArgs_ShouldThrowException()
        {
            // Arrange
            FiniteStateChangeEventArgs eventArgs = null;
            var previousStateKey = "previousState";

            // Act & Assert
            var ex = Assert.Throws<ArgumentNullException>(() => stateObj._Begin(eventArgs, previousStateKey));
            Assert.That(ex.ParamName, Is.EqualTo("eventArgs"));
        }

        [Test]
        public void _Begin_WithNullPreviousStateKey_ShouldThrowException()
        {
            // Arrange
            var eventArgs = new FiniteStateChangeEventArgs();
            string previousStateKey = null;

            // Act & Assert
            var ex = Assert.Throws<ArgumentNullException>(() => stateObj._Begin(eventArgs, previousStateKey));
            Assert.That(ex.ParamName, Is.EqualTo("previousStateKey"));
        }
    }
}
