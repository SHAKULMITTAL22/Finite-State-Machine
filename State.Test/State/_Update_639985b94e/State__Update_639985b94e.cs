// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using NSubstitute;
using FiniteStateMachine;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class State__Update_639985b94e
    {
        private IState _state;
        private float _deltaTime;

        [SetUp]
        public void SetUp()
        {
            _state = Substitute.For<IState>();
            _deltaTime = 1.0f; // TODO: Change this value based on your test scenario
        }

        [Test]
        public void Update_StateWithPositiveDeltaTime_StateIsUpdated()
        {
            // Act
            _state._Update(_deltaTime);

            // Assert
            _state.Received(1).Update(_deltaTime);
        }

        [Test]
        public void Update_StateWithZeroDeltaTime_StateIsNotUpdated()
        {
            // Arrange
            _deltaTime = 0;

            // Act
            _state._Update(_deltaTime);

            // Assert
            _state.DidNotReceive().Update(_deltaTime);
        }

        [Test]
        public void Update_StateWithNegativeDeltaTime_StateIsNotUpdatedButThrowsException()
        {
            // Arrange
            _deltaTime = -1;

            // Act & Assert
            Assert.Throws<ArgumentException>(() => _state._Update(_deltaTime));
            _state.DidNotReceive().Update(_deltaTime);
        }
    }
}
