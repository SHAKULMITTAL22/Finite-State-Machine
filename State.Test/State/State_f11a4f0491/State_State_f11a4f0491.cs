// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using FiniteStateMachine;
using FakeItEasy;

namespace FiniteStateMachine.Test
{
    // Defining the test class
    public class State_State_f11a4f0491
    {
        // Test Method to verify if State object is created successfully.
        [Test]
        public void TestCreateStateObject_Success()
        {
            // arrange
            var fakeStateMachine = A.Fake<StateMachine<string>>();
            var key = "fakeKey";

            // act
            var stateObject = new State<string>(fakeStateMachine, key);

            // assert
            Assert.IsNotNull(stateObject);
            Assert.AreEqual(fakeStateMachine, stateObject.StateMachine);
            Assert.AreEqual(key, stateObject.StateKey);
        }


        [Test]
        public void TestCreateStateObject_NullStateMachine()
        {
            // arrange
            string key = "fakeKey";

            // act & assert
            var ex = Assert.Throws<ArgumentNullException>(() => new State<string>(null, key));
            Assert.AreEqual("Value cannot be null. (Parameter 'fsm')", ex.Message);
        }

        // Test Method to verify if State object throws exception if key is null.
        [Test]
        public void TestCreateStateObject_NullKey()
        {
            // arrange
            var fakeStateMachine = A.Fake<StateMachine<string>>();

            // act & assert
            var ex = Assert.Throws<ArgumentNullException>(() => new State<string>(fakeStateMachine, null));
            Assert.AreEqual("Value cannot be null. (Parameter 'stateKey')", ex.Message);
        }
    }
}
