// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using FiniteStateMachine;
using System;

namespace FiniteStateMachine.Test
{
    public class StateBase_StateBase_87eb67ac37
    {
        private FiniteStateMachine finiteStateMachine;
        private Type stateType;

        [SetUp]
        public void Setup()
        {
            finiteStateMachine = new FiniteStateMachine();
            stateType = typeof(StateType);
        }

        [Test]
        public void StateBase_ShouldReturnStateBase_WhenGivenValidParameters()
        {
            var stateBase = new StateBase(finiteStateMachine, stateType);

            Assert.That(stateBase, Is.InstanceOf<StateBase>());
            Assert.That(stateBase.StateKey, Is.EqualTo(stateType));
            Assert.That(stateBase.FSM, Is.EqualTo(finiteStateMachine));
        }

        [Test]
        public void StateBase_ShouldThrowArgumentNullException_WhenGivenNullParameters()
        {
            Assert.Throws<ArgumentNullException>(() => new StateBase(null, null));
        }

        [Test]
        public void StateBase_ShouldThrowArgumentException_WhenGivenInvalidStateType()
        {
            var invalidStateType = typeof(int);

            Assert.Throws<ArgumentException>(() => new StateBase(finiteStateMachine, invalidStateType));
        }

        [TearDown]
        public void Teardown()
        {
            finiteStateMachine = null;
            stateType = null;
        }
    }
}
