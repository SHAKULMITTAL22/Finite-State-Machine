// Test generated by RoostGPT for test roost-test using AI Type Azure Open AI and AI Model roost-gpt4-32k

using NUnit.Framework;
using Moq;
using FiniteStateMachine;

namespace FiniteStateMachine.Test
{
    [TestFixture]
    public class StateBase__Begin_1ebf58b534
    {
        private Mock<FiniteStateMachine> _mockFiniteStateMachine;

        [SetUp]
        public void Setup()
        {
            _mockFiniteStateMachine = new Mock<FiniteStateMachine>();
        }

        [Test]
        public void _Begin_StateBeganEventIsCalled_WhenTheStateBegins()
        {
            // Arrange
            var stateKey = new StateKey();
            var finiteStateChangeEventArgs = new FiniteStateChangeEventArgs();
            var previousStateKey = new StateType();

            _mockFiniteStateMachine.Object.OnStateBegan += (args) => Assert.AreEqual(stateKey, args.StateKey);
     
            // Act
            _mockFiniteStateMachine.Object._Begin(finiteStateChangeEventArgs, previousStateKey);
     
            // Assert
            // The assertion is done in arrange because we need to check action during the method execution
        }

        [Test]
        public void _Begin_MethodBeginIsCalled_WithTheCorrectParameters()
        {
            // Arrange
            var finiteStateChangeEventArgs = new FiniteStateChangeEventArgs();
            var previousStateKey = new StateType();

            // TODO: You should replace "TheMethodToReplace" with the exact method you're testing
            _mockFiniteStateMachine.Setup(fsm => fsm.TheMethodToReplace(finiteStateChangeEventArgs, previousStateKey)).Verifiable();

            // Act
            _mockFiniteStateMachine.Object._Begin(finiteStateChangeEventArgs, previousStateKey);
            
            // Assert
            _mockFiniteStateMachine.Verify(fsm => fsm.TheMethodToReplace(finiteStateChangeEventArgs, previousStateKey), Times.Once);
        }        
    }
}
